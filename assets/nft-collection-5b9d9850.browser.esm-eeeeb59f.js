var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{N as l,a as W,A as C,c as f,U as w,d as y,f as T,G as R,e as E,h as S,i as b,k as c,T as A}from"./index-42fc860b.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm-7eabd2ea.js";import{C as M,a as O}from"./contract-owner-49e75547.browser.esm-65f4a865.js";import{C as k}from"./contract-platform-fee-e756e68f.browser.esm-1c164602.js";import{C as v}from"./contract-roles-71988d2e.browser.esm-1e7e8718.js";import{C as I}from"./contract-sales-918c7cb8.browser.esm-fc372e2e.js";import{S as P}from"./erc-721-standard-4c4125d2.browser.esm-5556abb6.js";import{E as U}from"./erc-721-27306550.browser.esm-bc2f4dac.js";import"./QueryParams-32a56510.browser.esm-8f630096.js";import"./drop-claim-conditions-e6f2abbf.browser.esm-81167503.js";import"./index-f19f5df4.js";const i=class i extends P{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new W(t,r,o,h,n);super(u,n,m);e(this,"mint",c(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",c(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",c(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",c(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",c(t=>this.erc721.burn.prepare(t)));this.abi=C.parse(o||[]),this.metadata=new f(this.contractWrapper,w,this.storage),this.app=new y(this.contractWrapper,this.metadata,this.storage),this.roles=new v(this.contractWrapper,i.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new I(this.contractWrapper),this.encoder=new T(this.contractWrapper),this.estimator=new R(this.contractWrapper),this.events=new E(this.contractWrapper),this.platformFees=new k(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new U(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[S("transfer"),b])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return A.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};e(i,"contractRoles",l);let p=i;export{p as NFTCollection};
